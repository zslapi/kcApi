<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kc.demo.dao.ComQuestionMapper" >
    <resultMap id="BaseResultMap" type="com.kc.demo.model.ComQuestion">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="userId" property="userid" jdbcType="INTEGER" />
        <result column="questionTypeId" property="questiontypeid" jdbcType="INTEGER" />
        <result column="questionStatus" property="questionstatus" jdbcType="INTEGER" />
        <result column="ip" property="ip" jdbcType="VARCHAR" />
        <result column="location" property="location" jdbcType="VARCHAR" />
        <result column="collectionedCounts" property="collectionedcounts" jdbcType="INTEGER" />
        <result column="praiseCount" property="praisecount" jdbcType="VARCHAR" />
        <result column="treadCount" property="treadcount" jdbcType="VARCHAR" />
        <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
        <result column="topicId" property="topicid" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
    id, title, userId, questionTypeId, questionStatus, ip, location, collectionedCounts,
    praiseCount, treadCount, createTime,topicId
    </sql>
    <sql id="Blob_Column_List" >
    content
    </sql>
    <sql id="Other_Column_List" >
    userNickName
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from tb_community_question
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByFilter" resultMap="BaseResultMap" parameterType="com.kc.demo.model.ComQuestion">'' ||
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from tb_community_question
        <where>
            <if test="questiontypeid != null and questiontypeid != ''">
                and questionTypeId = #{questiontypeid}
            </if>
            <if test="title != null and title != ''">
                and title like CONCAT(CONCAT("%",#{title},"%"))
            </if>
            <if test="userid != null and userid != ''">
                and userId = #{userid}
            </if>
        </where>
        ORDER BY createTime DESC
    </select>
    <select id="selectListByQuestionTypeId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    a.id id,
    a.title title,
    a.content content,
    a.createTime createTime,
    a.praiseCount praiseCount,
    a.treadCount treadCount,
    u.nickName userNickName
    from tb_community_question a
    left join tb_user_info u
    on a.userId = u.id
    where questionTypeId = #{questiontypeid,jdbcType=INTEGER}
    ORDER BY createTime DESC
  </select>
    <select id="selectByUserIds" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        a.id id,
        a.title title,
        a.content content,
        a.createTime createTime,
        a.praiseCount praiseCount,
        a.treadCount treadCount,
        u.nickName userNickName
        from tb_community_question a
        left join tb_user_info u
        on a.userId = u.id
        <if test="list != null">
            where
            <foreach collection="list" item="userId" open="a.userId IN(" close=")" separator=",">
                #{userId}
            </foreach>
        </if>
        ORDER BY createTime DESC
    </select>
    <select id="selectPraiseTreadCount" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        id,userId,praiseCount,treadCount
        from tb_community_question
        where id = #{id,jdbcType=INTEGER}
        for update
   </select>
    <select id="selectCountByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
    count(id)
    from tb_community_question
    where userId = #{userId,jdbcType=INTEGER}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_community_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.kc.demo.model.ComQuestion" >
    insert into tb_community_question (id, title, userId,
      questionTypeId, questionStatus, ip,
      location, collectionedCounts, praiseCount,
      treadCount, createTime, topicId, content
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER},
      #{questiontypeid,jdbcType=INTEGER}, #{questionstatus,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR},
      #{location,jdbcType=VARCHAR}, #{collectionedcounts,jdbcType=INTEGER}, #{praisecount,jdbcType=VARCHAR},
      #{treadcount,jdbcType=VARCHAR}, now(), #{topicid,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.kc.demo.model.ComQuestion" >
        insert into tb_community_question
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="userid != null" >
                userId,
            </if>
            <if test="questiontypeid != null" >
                questionTypeId,
            </if>
            <if test="questionstatus != null" >
                questionStatus,
            </if>
            <if test="ip != null" >
                ip,
            </if>
            <if test="location != null" >
                location,
            </if>
            <if test="collectionedcounts != null" >
                collectionedCounts,
            </if>
            <if test="praisecount != null" >
                praiseCount,
            </if>
            <if test="treadcount != null" >
                treadCount,
            </if>
                createTime,
            <if test="topicid != null" >
                topicId,
            </if>
            <if test="content != null" >
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="userid != null" >
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="questiontypeid != null" >
                #{questiontypeid,jdbcType=INTEGER},
            </if>
            <if test="questionstatus != null" >
                #{questionstatus,jdbcType=INTEGER},
            </if>
            <if test="ip != null" >
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="location != null" >
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="collectionedcounts != null" >
                #{collectionedcounts,jdbcType=INTEGER},
            </if>
            <if test="praisecount != null" >
                #{praisecount,jdbcType=VARCHAR},
            </if>
            <if test="treadcount != null" >
                #{treadcount,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null" >
                now(),
            </if>
            <if test="topicid != null" >
                #{topicid,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.kc.demo.model.ComQuestion" >
        update tb_community_question
        <set >
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="userid != null" >
                userId = #{userid,jdbcType=INTEGER},
            </if>
            <if test="questiontypeid != null" >
                questionTypeId = #{questiontypeid,jdbcType=INTEGER},
            </if>
            <if test="questionstatus != null" >
                questionstatus = #{questionstatus,jdbcType=INTEGER},
            </if>
            <if test="ip != null" >
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="location != null" >
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="collectionedcounts != null" >
                collectionedCounts = #{collectionedcounts,jdbcType=INTEGER},
            </if>
            <if test="praisecount != null" >
                praiseCount = #{praisecount,jdbcType=VARCHAR},
            </if>
            <if test="treadcount != null" >
                treadCount = #{treadcount,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null" >
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="topicid != null" >
                topicId = #{topicid,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
